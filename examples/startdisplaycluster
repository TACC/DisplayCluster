#!/usr/bin/env python2

# example launcher for DisplayCluster
# this should work for most cases, but can be modified for a particular
# installation if necessary

import os
import sys
import xml.etree.ElementTree as ET
import subprocess
import distutils.spawn
import signal
import shlex

def signalhandler(signum, a):
	print "signalhandler"
	os.system("kill -- -%s" % os.getpid())
	sys.exit(1)

signal.signal(signal.SIGINT, signalhandler)

os.environ['DISPLAYCLUSTER_TIMEOUT'] = '1800'
os.environ['DISPLAYCLUSTER_SCREENSAVER'] = 'examples/screensaver_moveOff.py'
os.environ['DISPLAYCLUSTER_SCREENSAVER_PONGTIME'] = '300'
os.environ['DISPLAYCLUSTER_SCREENSAVER_IMAGE'] = 'examples/tacc-logo.png'

# DisplayCluster directory; this is the parent directory of this script
dcPath = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# set an environment variable for the base DisplayCluster directory
os.environ['DISPLAYCLUSTER_DIR'] = dcPath
if 'DISPLAYCLUSTER_CONFIG' not in os.environ:
  	os.environ['DISPLAYCLUSTER_CONFIG'] = dcPath + '/configuration.xml'
	
# set the Python path so the pydc module can be found
if 'PYTHONPATH' not in os.environ:
    os.environ['PYTHONPATH'] = dcPath + '/python'
else:
    os.environ['PYTHONPATH'] += os.pathsep + dcPath + '/python'

# for example scripts
os.environ['PYTHONPATH'] += os.pathsep + dcPath + '/examples'

# add in the default Python path provided by the Python interpreter since it
# is not provided in our GUI Python console
os.environ['PYTHONPATH'] += os.pathsep + os.pathsep.join(sys.path)

# form the MPI host list

# rank 0 is always on localhost
hostList = ['localhost']

# configuration.xml gives the rest of the hosts
try:
    doc = ET.parse(dcPath + "/configuration.xml")

    for elem in doc.findall('.//process'):
        host = elem.get("host")

        if host is None:
            print 'Error, no host attribute in <process> tag.'
            exit(-1)

        hostList.append(host)
except:
    print 'Error processing configuration.xml. Make sure you have created a configuration.xml and put it in ' + dcPath + '/. An example is provided in the examples/ directory.'
    exit(-2)

hostListString = ",".join(hostList)

# find full path to mpirun; if MPI is installed in a non-standard location the
# full path may be necessary to launch correctly across the cluster.
mpirunCommand = distutils.spawn.find_executable('mpirun')

if mpirunCommand is None:
    print 'Error, could not find mpirun executable in PATH'
    exit(-3)

startCommand = mpirunCommand + ' -x DISPLAYCLUSTER_DIR -x PYTHONPATH -host ' + hostListString + ' ' + dcPath + '/bin/displaycluster.py'
# startCommand = mpirunCommand + ' -host ' + hostListString + " " + dcPath + '/bin/displaycluster'

print 'launching with command: ' + startCommand

subprocess.Popen(['python2', '%s/remote/app.py' % dcPath])
subprocess.call(shlex.split(startCommand))
os.system("kill -- -%s" % os.getpid())
